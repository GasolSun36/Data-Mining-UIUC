1
00:00:08,386 --> 00:00:12,982
Tufte的方法告诉你如何
给平面上的图节点布局

2
00:00:12,982 --> 00:00:14,900
使得那些边不会交叉

3
00:00:14,900 --> 00:00:18,230
如果你没有平面图
只有随机的图

4
00:00:18,230 --> 00:00:24,080
要用更有针对性的方法来布局
这样才能方便地可视化

5
00:00:24,080 --> 00:00:29,550
正如之前的演示中
Tufte的平面图布局方法

6
00:00:29,550 --> 00:00:34,210
将每个点放在
它的邻居的平均位置上

7
00:00:34,210 --> 00:00:40,180
这样每个点就给当前的
点的位置施加一个力

8
00:00:40,180 --> 00:00:42,810
这是力驱动布局的一个例子

9
00:00:42,810 --> 00:00:45,760
还有好多种力驱动布局的方式

10
00:00:45,760 --> 00:00:50,700
其中宝石布局很流行
这就是本例中布局的方式

11
00:00:50,700 --> 00:00:54,540
这张图表示了酵母
蛋白质的互作用关系

12
00:00:54,540 --> 00:00:59,160
大约有1500个酵母蛋白质
和2000个互作用关系

13
00:00:59,160 --> 00:01:05,350
酵母蛋白质用节点表示
互作用关系用边表示

14
00:01:06,620 --> 00:01:10,220
在力驱动布局的GEM算法中

15
00:01:10,220 --> 00:01:13,340
我们模拟一个弹簧系统的力

16
00:01:13,340 --> 00:01:17,810
这样连接两个节点
的边对应一个弹簧

17
00:01:17,810 --> 00:01:22,370
如果弹簧比静止长度要长
那么它会有一个拉伸长度

18
00:01:22,370 --> 00:01:24,280
而此时节点之间也会相互吸引

19
00:01:24,280 --> 00:01:27,910
如果它们比静止长度要短
那么节点就会互相排斥

20
00:01:27,910 --> 00:01:31,080
而且如果你有多级的节点 
如果你有一个邻居很多的节点

21
00:01:31,080 --> 00:01:35,180
那GEM会把弹簧的
静止长度延长

22
00:01:35,180 --> 00:01:38,220
以此把邻居推开
因为这些邻居节点有很多

23
00:01:38,220 --> 00:01:42,050
与那个多级数节点
共用一条边

24
00:01:43,460 --> 00:01:46,210
在节点之间还有一种排斥作用

25
00:01:46,210 --> 00:01:50,480
虽然他们并没有被弹簧连起来

26
00:01:50,480 --> 00:01:55,230
就是为了使节点不叠加在一起
即使它们并不由一条边连接

27
00:01:55,230 --> 00:01:58,860
这种排斥力基本相当于
两点之间距离的倒数

28
00:01:58,860 --> 00:02:01,770
存在于任何两个点之间

29
00:02:01,770 --> 00:02:06,240
最后所有节点都会受到一种

30
00:02:06,240 --> 00:02:09,460
朝向图中心的引力
以使节点不要飘离太远

31
00:02:09,460 --> 00:02:13,167
还有一个很小的随机扰动力

32
00:02:13,167 --> 00:02:15,594
来保证节点的位置是唯一的

33
00:02:17,550 --> 00:02:22,529
在我们讨论以放置节点
来进行图布局的时候

34
00:02:22,529 --> 00:02:27,130
如果能考虑节点的
中心性是很好的

35
00:02:27,130 --> 00:02:30,290
中心性是一种分析

36
00:02:30,290 --> 00:02:33,470
节点应该放置在布局中
的哪个位置的方法

37
00:02:33,470 --> 00:02:37,010
是应该放在更中间还是更边缘

38
00:02:37,010 --> 00:02:42,020
这些蓝色节点是中心节点

39
00:02:42,020 --> 00:02:47,210
红色节点是非中心节点

40
00:02:47,210 --> 00:02:49,425
有很多种度量中心性的方式

41
00:02:49,425 --> 00:02:54,695
很多种测量中心节点
应该如何布局的方法

42
00:02:54,695 --> 00:02:59,115
节点度数是一种简单手法
只要计算一个节点拥有的

43
00:02:59,115 --> 00:03:00,115
边的数量

44
00:03:00,115 --> 00:03:03,635
这样高度数的节点
应该放在中间

45
00:03:03,635 --> 00:03:07,330
低度数的节点可能会在边上

46
00:03:08,740 --> 00:03:15,390
网叶排序（Page Rank） 也是一种中心性测量方法
Google用来查找

47
00:03:15,390 --> 00:03:19,800
受欢迎的网页  方法大概是计算
其他页面到此页面的链接数

48
00:03:19,800 --> 00:03:22,280
另一种方法基于隔离度

49
00:03:22,280 --> 00:03:24,540
你可以把它想成
节点之间的距离

50
00:03:24,540 --> 00:03:27,470
例如这里的绿色点

51
00:03:27,470 --> 00:03:32,240
需要经过三条边到达红色点
那么距离就是三

52
00:03:32,240 --> 00:03:34,480
距离指的是从
一个点到另一个点

53
00:03:34,480 --> 00:03:39,000
所需要经过的
边的数量的最小值

54
00:03:39,000 --> 00:03:42,290
而隔离矩阵基本就是
表示的是将从一个点

55
00:03:42,290 --> 00:03:46,220
到图上其他点的距离加起来

56
00:03:47,660 --> 00:03:51,320
如果把它们相加
那么对离图中心较近的点而言

57
00:03:51,320 --> 00:03:53,030
结果就会比较小

58
00:03:53,030 --> 00:03:57,300
而对处在图的边缘的点而言

59
00:03:57,300 --> 00:03:59,670
在这种布局中
结果就会比较大

60
00:03:59,670 --> 00:04:04,210
你可以把亲近中心性看作

61
00:04:04,210 --> 00:04:05,960
隔离度的倒数

62
00:04:05,960 --> 00:04:10,401
这样邻近中心性高的点

63
00:04:10,401 --> 00:04:11,010
隔离度就比较低

64
00:04:11,010 --> 00:04:14,556
你也可以把图的中心性
看作隔离度

65
00:04:14,556 --> 00:04:18,470
只是我没有取所有节点的距离
然后把它们相加而已

66
00:04:18,470 --> 00:04:22,240
我取了节点和离它最远的
节点之间的距离

67
00:04:22,240 --> 00:04:25,820
它的倒数被叫做图的中心性值

68
00:04:25,820 --> 00:04:28,400
最后还有居间中心性

69
00:04:28,400 --> 00:04:33,410
居间中心性指的是对任一对结点

70
00:04:33,410 --> 00:04:37,530
找到这对节点之间的最短路径

71
00:04:39,210 --> 00:04:42,470
如果我找到任意节点和
另外一个节点之间的最短路径

72
00:04:42,470 --> 00:04:47,260
然后统计经过一个特定的点的
所有最短路径

73
00:04:47,260 --> 00:04:50,537
这就是这个节点的居间中心性值

74
00:04:50,537 --> 00:04:55,610
如果我选择每一个节点
和另一个节点之间最短路径

75
00:04:57,080 --> 00:05:01,354
这些最短路径更有可能
经过这些中心节点

76
00:05:01,354 --> 00:05:03,630
而不是边缘节点

77
00:05:03,630 --> 00:05:08,469
所以我们在这里画出的是

78
00:05:08,469 --> 00:05:11,910
基于居间中心性的节点图

79
00:05:11,910 --> 00:05:17,540
任意两个点之间的最短路径
会经过哪些点呢?

80
00:05:17,540 --> 00:05:21,320
蓝色的点值比较高

81
00:05:21,320 --> 00:05:23,210
红色的点值比较低

82
00:05:24,230 --> 00:05:25,958
你还可以以此对边进行统计

83
00:05:25,958 --> 00:05:28,845
有多少最短路径经过某条边?

84
00:05:31,760 --> 00:05:34,404
这样我们就可以用居间中心性

85
00:05:34,404 --> 00:05:37,960
或者其他中心性度量
来简化一张图

86
00:05:37,960 --> 00:05:42,630
例如 如果我计算
这个酵母蛋白质网络的

87
00:05:42,630 --> 00:05:45,570
边的居间中心性

88
00:05:45,570 --> 00:05:48,200
居间中心性较低的边

89
00:05:48,200 --> 00:05:49,990
经过他们的最短路径比较少

90
00:05:49,990 --> 00:05:54,840
居间中心性较高的边
有很多边经过它们

91
00:05:54,840 --> 00:05:58,710
所以有很多最短路径经过它们

92
00:05:58,710 --> 00:06:03,070
那么如果我删除
有较少最短路径经过的边

93
00:06:03,070 --> 00:06:06,900
你会认为它的影响少于
删除有较多最短路径

94
00:06:06,900 --> 00:06:08,780
经过的边

95
00:06:08,780 --> 00:06:13,810
这里是我根据边的居间中心性的
而作的绘图

96
00:06:13,810 --> 00:06:18,560
然后删掉了居间中心性最低的
也就是深蓝色的边

97
00:06:18,560 --> 00:06:23,140
留下了居间中心性最高的
也就是红色的边

98
00:06:23,140 --> 00:06:26,830
如果去掉某条边会使图经不联通
我就没有去掉那些边

99
00:06:26,830 --> 00:06:31,050
这样的结果是

100
00:06:31,050 --> 00:06:35,590
图上的点和边一样多
大约1500条边和1500个点

101
00:06:35,590 --> 00:06:42,100
我猜这像一个最少连通的树

102
00:06:42,100 --> 00:06:46,880
但是它保留了
居间中心性较高的边

103
00:06:46,880 --> 00:06:50,440
而去掉了居间中心性较低的边

104
00:06:50,440 --> 00:06:53,290
这样余下的就是通讯主干

105
00:06:53,290 --> 00:06:59,170
也就是在寻找任意两个点
之间最短路径时最常用的边

106
00:06:59,170 --> 00:07:00,750
这就简化了布局

107
00:07:00,750 --> 00:07:03,350
那么当我使用同样的
GEM布局图 即力驱动布局图

108
00:07:03,350 --> 00:07:07,870
来计算弹簧距离时
右图中需要计算的边减少了

109
00:07:07,870 --> 00:07:11,140
而左图中比较多

110
00:07:11,140 --> 00:07:14,850
右图中节点布局更分散
因为弹簧更少了

111
00:07:14,850 --> 00:07:19,210
而节点会更加自由的
移动到唯一的位置

112
00:07:19,210 --> 00:07:23,430
在视觉上可以更好地看出
这种布局中节点的关系

113
00:07:23,430 --> 00:07:24,830
比原来的要好

114
00:07:24,830 --> 00:07:26,310
你也可以看出这里的边比较少

115
00:07:26,310 --> 00:07:29,740
可以随时把必要的边加上去

116
00:07:29,740 --> 00:07:34,090
可以加上那些
居间中心性比较低的边

117
00:07:34,090 --> 00:07:38,630
以此看到更完全的图
但此时的布局还是比原来要好

118
00:07:38,630 --> 00:07:43,380
当你试图用所有的边
来计算布局时

119
00:07:45,420 --> 00:07:48,120
还有其他的方法用来给图布局

120
00:07:49,370 --> 00:07:54,260
本例中的技术叫做边束
我们把所有节点放在一个圈内

121
00:07:54,260 --> 00:08:00,770
画个圆圈 节点按经向分布
然后在圈内画边

122
00:08:00,770 --> 00:08:05,570
并被节点围成的圈所包围

123
00:08:07,100 --> 00:08:10,110
这样我们就可以把边
束成一束

124
00:08:10,110 --> 00:08:13,630
如果我们有方法来
判断边之间的相似性

125
00:08:13,630 --> 00:08:18,091
我们就可建立线束
这就叫做边束

126
00:08:18,091 --> 00:08:20,260
它可以简化该图的可视化表示

127
00:08:20,260 --> 00:08:26,380
本例是一个叫做Enron的公司
在2001年的诉讼案里

128
00:08:26,380 --> 00:08:32,630
132名员工之间的电子邮件

129
00:08:32,630 --> 00:08:34,160
这里有几种不同的布局

130
00:08:34,160 --> 00:08:39,330
这是一种基于节点位置的
力驱动布局

131
00:08:39,330 --> 00:08:42,930
而不是直接把边画成直线

132
00:08:42,930 --> 00:08:47,040
把每个节点连起来以后
我们尝试着把边束起来

133
00:08:47,040 --> 00:08:52,430
这样你就可以看到
在这些表示中主要的通讯线路

134
00:08:55,180 --> 00:08:58,900
你怎样得知两条边是相似

135
00:08:58,900 --> 00:09:01,920
还是不相似
以此将它们束在一起呢？

136
00:09:01,920 --> 00:09:08,390
对于这个任务而言
有效的方法是创建群落

137
00:09:08,390 --> 00:09:13,368
把那些共享有相似行为的边和
有相似边连接的点

138
00:09:13,368 --> 00:09:18,620
聚合起来

139
00:09:19,650 --> 00:09:24,340
这样为了找到群落 可以根据中心性 
或居间中心性的由大到小的顺序来去边

140
00:09:24,340 --> 00:09:29,560
我们使用了后者

141
00:09:29,560 --> 00:09:34,660
在之前的节点布局中
我们先移除中心性较低的边

142
00:09:34,660 --> 00:09:40,030
与其不同 在这里
我们先移除中心性较高的边

143
00:09:40,030 --> 00:09:44,530
现在我们移除一些边
是主要通信线路的一部分

144
00:09:44,530 --> 00:09:51,790
这会让图变得不连通
产生一些孤立节点

145
00:09:51,790 --> 00:09:55,030
孤立的节点会聚集成团

146
00:09:55,030 --> 00:09:58,730
而这些团形成聚合
进一步形成群落

147
00:09:58,730 --> 00:10:03,730
这样你可以把
群落里的节点想成

148
00:10:03,730 --> 00:10:07,920
它们从具有高居间中心性的边
与另外的群落通讯

149
00:10:07,920 --> 00:10:12,870
这样当我们依次去掉
居间中心性较高到较低的边时

150
00:10:12,870 --> 00:10:18,960
我们就为这些群落
划分了层级关系

151
00:10:18,960 --> 00:10:24,169
删除边时可以创建节点来表示
这些边所连接的群落

152
00:10:25,230 --> 00:10:30,120
这样就可以用这些群落
来弄清楚应该以什么顺序

153
00:10:30,120 --> 00:10:35,120
把这些节点布置在圆的边缘上

154
00:10:36,358 --> 00:10:41,490
再通过把这些集团聚合在一起
我们可以把节点放在内部

155
00:10:41,490 --> 00:10:44,010
来表示更高级的群落

156
00:10:44,010 --> 00:10:47,550
这叫群落节点
他们不是原本的图的一部分

157
00:10:47,550 --> 00:10:50,439
只是用来表示群落而已

158
00:10:50,439 --> 00:10:53,045
来表示节点集团的聚合

159
00:10:55,250 --> 00:10:59,530
这里有一些边束群落的例子

160
00:10:59,530 --> 00:11:05,380
本例中我们看到
美国所有大学之间的橄榄球赛

161
00:11:05,380 --> 00:11:08,260
伊利诺伊大学是其中的一所

162
00:11:08,260 --> 00:11:14,390
参与之后 任意时间任一学校
会与另一所学校的对决

163
00:11:14,390 --> 00:11:19,714
我们可以用一条边来表示
看最后的绘图

164
00:11:19,714 --> 00:11:23,800
把具有高居间中心性的边移除
他们就会开始分化出群落

165
00:11:23,800 --> 00:11:29,090
而我们就能找出一个布局
来表示这些低层次的群落

166
00:11:29,090 --> 00:11:32,830
这几乎就像重新发现了
校际间的球赛联盟

167
00:11:32,830 --> 00:11:38,190
所以通过查看所有举行的比赛

168
00:11:38,190 --> 00:11:43,020
也就是美国一个学校与另一学校的橄榄球赛
我们就可以发现

169
00:11:43,020 --> 00:11:48,660
美国大学之间
比赛的联盟关系

170
00:11:49,960 --> 00:11:54,680
然后就可以运用这种群落结构
来弄清楚边的关系

171
00:11:54,680 --> 00:11:58,690
所以一个群落中一区域的边和
另一区域的边

172
00:11:58,690 --> 00:12:03,610
可以缩并起来形成边束

173
00:12:03,610 --> 00:12:07,920
方法是把它们吸引到
边的节点位置上

174
00:12:09,900 --> 00:12:14,240
这里的例子表示了Enron的实际群落

175
00:12:14,240 --> 00:12:16,730
我们所发现的群落

176
00:12:16,730 --> 00:12:21,190
这些和这里的其余部分
不在同一个位置上

177
00:12:21,190 --> 00:12:23,960
例如这是Enron主席

178
00:12:23,960 --> 00:12:27,300
他被列在这里的CEO区域

179
00:12:27,300 --> 00:12:32,230
我们也发现了同样的这个群落

180
00:12:32,230 --> 00:12:37,080
通过在由员工
发邮件关系组成的图中

181
00:12:37,080 --> 00:12:41,489
去除高居间中心性的边
然后得到这些群落

182
00:12:43,710 --> 00:12:47,180
我们之后会看到
过滤和关注互动细节

183
00:12:47,180 --> 00:12:52,190
在边束的案例或任何
大型数据集中 都是非常有用的

184
00:12:52,190 --> 00:12:58,000
我们可以点击 比如说 
Enron的CEO Kenneth Lay

185
00:12:58,000 --> 00:13:02,280
来查看所有传给其他员工

186
00:13:02,280 --> 00:13:04,240
或者其他群落的电子邮件

187
00:13:04,240 --> 00:13:06,090
再比如我可以点击
伊利诺伊大学

188
00:13:06,090 --> 00:13:09,880
就可以看到它在十大联盟内
参与的其他联盟球赛

189
00:13:09,880 --> 00:13:14,229
但也可以看到它在联盟之外
参加的球赛

190
00:13:15,900 --> 00:13:20,120
我们刚才看到的
可视化图的方法有很多

191
00:13:20,120 --> 00:13:22,310
并不一定是平面图
可以是任何图

192
00:13:22,310 --> 00:13:25,060
社交网络或者其他的图

193
00:13:25,060 --> 00:13:31,433
它们都大部分基于中心性分析

194
00:13:31,433 --> 00:13:36,050
某种对节点做出的
中心性的定义

195
00:13:36,050 --> 00:13:46,050
[背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community