1
00:00:00,012 --> 00:00:03,692
[背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community

2
00:00:08,127 --> 00:00:11,037
当我们将数据组成图来可视化时

3
00:00:11,037 --> 00:00:14,030
我们很可能想把它
摆放在一个平面上

4
00:00:14,030 --> 00:00:17,699
有一种类型的图可以做到这点
它被称为平面图（planner graph）

5
00:00:19,270 --> 00:00:23,980
如之前所看到的 我们要
将数据项表示为节点

6
00:00:23,980 --> 00:00:29,340
而节点间的边将表示那些数据项间的关系

7
00:00:29,340 --> 00:00:33,322
在某些情况下 我们会用到一个图
例如一个平面图

8
00:00:33,322 --> 00:00:39,900
可以这样画一个平面图
让连接节点边都不相交

9
00:00:39,900 --> 00:00:41,840
这被称为平面嵌入（planar embedding）

10
00:00:41,840 --> 00:00:43,190
同样一个平面图

11
00:00:43,190 --> 00:00:48,570
在这个例子中 同样的外部节点
由相同的5条边连接起来

12
00:00:48,570 --> 00:00:52,470
在这个非平面嵌入的例子中
这些边是相交的

13
00:00:52,470 --> 00:00:54,980
所以 相同的图
它们两个都是平面图

14
00:00:54,980 --> 00:00:57,240
我们希望做的是
能够找到这种嵌入

15
00:00:57,240 --> 00:01:00,400
即排布那些节点的方式
使这些边不相交

16
00:01:00,400 --> 00:01:04,570
这样 对观察者来说
节点间的关系将会更清晰

17
00:01:05,970 --> 00:01:06,567
于是，我们可以这样做。

18
00:01:06,567 --> 00:01:08,490
对于非常大的图 我们也可以这样做

19
00:01:08,490 --> 00:01:14,170
例如 有一个三角形网格
它表示了一个几何物体

20
00:01:14,170 --> 00:01:17,440
因为它是一个三角网格
所以顶点是节点

21
00:01:17,440 --> 00:01:20,800
而三角形的边
构成了节点间的边

22
00:01:20,800 --> 00:01:26,600
这个图 一个有5万个节点的大图
不是一个平面图

23
00:01:26,600 --> 00:01:31,720
但是 如果我直接将其剪开
表面会被分开 而边就有重复了

24
00:01:31,720 --> 00:01:37,020
若沿着这些黑线把它们剪开
我就可以把它转换成一个平面图

25
00:01:37,020 --> 00:01:41,713
于是 作为一个平面图 接下来我可以找到
一个方式 将其嵌入到一个平面

26
00:01:41,713 --> 00:01:43,627
使得那些边不会交叉

27
00:01:43,627 --> 00:01:47,326
这个图中有很多节点和很多边

28
00:01:47,326 --> 00:01:51,620
很难看到所有的边
所以相信我 它们没有相交

29
00:01:51,620 --> 00:01:54,570
希望你将处理的节点和边较少

30
00:01:54,570 --> 00:01:58,020
这样你的排布
会比这个稍微清晰一些

31
00:01:58,020 --> 00:02:01,996
有一个方法使我们能
自动找到这些嵌入

32
00:02:01,996 --> 00:02:06,611
它被称为Tutte 方法
一开始 它挑选你的节点中的一部分

33
00:02:06,611 --> 00:02:09,316
并且定义它们在排布中
应放在哪里

34
00:02:09,316 --> 00:02:14,292
在这个例子中 我将用组成一个方块的
8个节点和12条边

35
00:02:14,292 --> 00:02:17,264
我将首先选择
这四个节点

36
00:02:17,264 --> 00:02:21,940
我要为它们在这个
示例中的SVG画布上选定位置

37
00:02:21,940 --> 00:02:27,060
我将把节点1放在 (0,0) 节点2放在 (1,0)

38
00:02:27,060 --> 00:02:30,800
节点3放在 (0,1) 节点4放在 (1,1)

39
00:02:30,800 --> 00:02:35,780
然后 我将试图弄清楚
我应把节点5，6，7和8放在哪里

40
00:02:35,780 --> 00:02:40,080
以便生成这个图的一个平面嵌入

41
00:02:40,080 --> 00:02:43,560
这个图被显示为一个非平面嵌入

42
00:02:43,560 --> 00:02:45,490
因为这里有边相互交叉

43
00:02:45,490 --> 00:02:47,770
我们希望找出如何
生成它的一个平面嵌入

44
00:02:49,150 --> 00:02:52,395
为了对任何图都能
自动做到这一点

45
00:02:52,395 --> 00:02:55,194
我们将需要
求解一个线性系统

46
00:02:55,194 --> 00:02:57,120
所以 我们会建立一个矩阵

47
00:02:57,120 --> 00:02:58,920
实际上 是一个相邻矩阵（adjacency matrix）

48
00:02:58,920 --> 00:03:02,820
一种特殊的相邻矩阵
称为拉普拉斯矩阵（Laplacian matrix）

49
00:03:02,820 --> 00:03:06,030
它是一个相邻矩阵 其含义是

50
00:03:06,030 --> 00:03:12,094
在节点1和节点2相连接的情况下
我要将一个节点放到另一个节点那里

51
00:03:12,094 --> 00:03:17,310
于是在第一行第二列
我会得到一个非零矩阵元素

52
00:03:17,310 --> 00:03:21,110
在这个例子中，这个非零元素
将会是1除以其关联度

53
00:03:21,110 --> 00:03:23,820
节点1的关联度是3

54
00:03:23,820 --> 00:03:28,500
它有三条边从其延展出去
所以我会在这里填入1/3

55
00:03:28,500 --> 00:03:33,480
也就是 节点1和节点2 3 5相连

56
00:03:33,480 --> 00:03:38,272
于是我将把1/3填入第二列
第三列 以及

57
00:03:38,272 --> 00:03:42,180
第五列 节点 1 与其它节点都不相连

58
00:03:42,180 --> 00:03:47,843
所以 在那些节点所在的列
包括节点 1 的列 我将填入零

59
00:03:47,843 --> 00:03:52,707
一个相临矩阵其拉普拉斯形式的美妙之处

60
00:03:52,707 --> 00:03:57,690
在于 就节点1来说 我连接到三个节点

61
00:03:57,690 --> 00:03:59,090
我的关联度是3

62
00:04:00,450 --> 00:04:03,156
我填入的值是 1 除以关联度

63
00:04:03,156 --> 00:04:07,730
所以 如果我把第一列所有元素
加在一起 我得到的是1

64
00:04:11,775 --> 00:04:16,521
我们要从那个拉布拉斯临接矩阵
建立一个特殊的

65
00:04:16,521 --> 00:04:17,140
矩阵。

66
00:04:17,140 --> 00:04:18,350
我们会姑且称这个矩阵为A

67
00:04:19,630 --> 00:04:22,840
我要做的第一件事情是
我要用那个拉普拉斯矩阵

68
00:04:22,840 --> 00:04:27,000
我将在所有行中
把已经赋值的节点置成零

69
00:04:27,000 --> 00:04:31,889
我已经为节点1 2 3和4设定一个位置

70
00:04:31,889 --> 00:04:34,913
我将在我的相临矩阵中
把它们设置为零

71
00:04:34,913 --> 00:04:37,950
再将整体减去单位矩阵

72
00:04:37,950 --> 00:04:42,960
单位矩阵是
在对角线元素取值为 1 而其它都为零

73
00:04:44,370 --> 00:04:47,920
这样我就需要求解该矩阵A

74
00:04:47,920 --> 00:04:52,395
以便为节点5 6 7和8
找到放置的位置

75
00:04:52,395 --> 00:04:55,530
所以 我需要建立一个线性系统

76
00:04:55,530 --> 00:05:00,791
我们会为我们的节点
的 x 坐标建立一个线性系统

77
00:05:00,791 --> 00:05:05,981
然后 我们会为 y 坐标
建立一个单独的线性系统

78
00:05:05,981 --> 00:05:09,880
我们为 x 坐标所使用
的线性系统看起来像这样

79
00:05:09,880 --> 00:05:14,120
这是我的矩阵A 其与 x 相乘

80
00:05:14,120 --> 00:05:18,810
一个列向量 也就是那些节点的 x 坐标

81
00:05:18,810 --> 00:05:23,130
最后就是我的答案
即 前四个节点的 x 坐标

82
00:05:23,130 --> 00:05:27,100
实际上应该是什么 以及
要求解的那些节点的零值

83
00:05:27,100 --> 00:05:34,410
就是说 1 乘以 x1
节点 1 的 x 坐标

84
00:05:34,410 --> 00:05:38,510
1 乘以 x1 
且 0 乘以其它任何项等于 0

85
00:05:38,510 --> 00:05:39,950
因为那是我设置过的节点

86
00:05:39,950 --> 00:05:44,280
所以这里我有了节点 0
节点 1 节点 2 节点 3

87
00:05:44,280 --> 00:05:48,370
这些是节点 1 节点 2 节点 3
和节点 4 的 x 坐标

88
00:05:48,370 --> 00:05:52,700
这第二行 这里是1

89
00:05:52,700 --> 00:05:59,555
1 乘以 x2 等于 1 那么
节点 2 的一个设定的 x 坐标是 1

90
00:05:59,555 --> 00:06:03,815
于是 这就是我放入
这个列向量bx

91
00:06:03,815 --> 00:06:09,255
的开始几个元素的值
而剩下的元素都是零

92
00:06:09,255 --> 00:06:13,365
这里的美妙之处在于
如果我们看一下第五行

93
00:06:13,365 --> 00:06:19,007
第五行的意思是
节点 5 的 x 坐标 x5

94
00:06:19,007 --> 00:06:25,073
1 乘以 x5 年减去 1/3 乘以 x1

95
00:06:25,073 --> 00:06:29,160
减去 1/3 乘以 x6

96
00:06:29,160 --> 00:06:33,320
减去 1/3 乘以 x7
将会等于零

97
00:06:34,570 --> 00:06:38,501
这本质上建立了
一个线性等式 以至于

98
00:06:38,501 --> 00:06:44,503
无论我将节点 6 和 7 放在哪里
它们都将影响到节点 5

99
00:06:44,503 --> 00:06:50,042
一旦我们这样对第5 6 7和 8 行操作
即对应着节点 5

100
00:06:50,042 --> 00:06:54,938
6 7 和 8 那么当我们求解出这个系统的时候
我们能会得到

101
00:06:54,938 --> 00:06:58,910
能解算出这个关系的节点 5 6 7 和 8 的位置

102
00:07:00,530 --> 00:07:02,470
对于 y 坐标做同样的计算

103
00:07:02,470 --> 00:07:07,389
现在，我的 by 列向量等于
是我已经摆放的节点 1、2

104
00:07:07,389 --> 00:07:12,166
3 和 4 的 y 坐标 然后
将其它所有元素都赋值为零

105
00:07:12,166 --> 00:07:15,550
节点 1 的 y 坐标是 0

106
00:07:15,550 --> 00:07:18,395
节点 2 的 y 坐标是 0

107
00:07:18,395 --> 00:07:24,272
节点 3 的 y 坐标是 1
节点 4 的 y 坐标是 1

108
00:07:24,272 --> 00:07:30,075
这实质上是说
y1 = 0, y2 = 0, y3 = 1, y4 = 1

109
00:07:30,075 --> 00:07:32,845
但是 对于节点 5 的 y 坐标

110
00:07:32,845 --> 00:07:38,148
无论节点 5 的坐标是多少
它等于负的 1/3乘以

111
00:07:38,148 --> 00:07:43,688
节点 1 的 y 坐标 减去
1/3 的节点 6 的 y 坐标

112
00:07:43,688 --> 00:07:49,419
再减去 1/3 节点 7 的 y 坐标
以及如此对剩下的节点推选下去

113
00:07:52,663 --> 00:07:56,640
于是 我本质上对 x 系统
建立起了这些等式

114
00:07:56,640 --> 00:08:01,473
我说过 x1 等于 0 x2等于 1
x3 等于 0 并且

115
00:08:01,473 --> 00:08:03,510
x4 等于 1

116
00:08:03,510 --> 00:08:09,190
然后 我对剩余节点的 x 坐标
建立起了这些等式

117
00:08:09,190 --> 00:08:12,260
对于 y 坐标
我建立了类似的等式

118
00:08:14,560 --> 00:08:19,019
所以 如果我把这些放在一起
我实际上把节点 1 的 x1 和

119
00:08:19,019 --> 00:08:24,298
y1 在 xy 坐标系中放在了(0, 0)
节点 2 放在(1, 0)

120
00:08:24,298 --> 00:08:28,757
节点 3 在 (0, 1)
节点 4 在 (1, 1) 并且

121
00:08:28,757 --> 00:08:33,602
我对剩余的坐标已经
建立了这些关系

122
00:08:33,602 --> 00:08:36,350
现在 你或许注意到了什么

123
00:08:36,350 --> 00:08:43,020
我实际上在说 对于节点 5
它将是节点 1 的位置

124
00:08:43,020 --> 00:08:48,780
加上节点 6 的位置 加上节点 7 的位置
其后再除以 3

125
00:08:48,780 --> 00:08:53,777
本质上来说 每一个节点的位置
都将会是其有共享边的

126
00:08:53,777 --> 00:08:58,473
邻居节点位置的平均值
并且这个关系对所有

127
00:08:58,473 --> 00:09:00,160
剩余节点来说都是正确的

128
00:09:00,160 --> 00:09:03,238
所以 我们固定这个位置
我们为我们的节点中

129
00:09:03,238 --> 00:09:06,170
一些节点设定位置
然后剩余的节点就

130
00:09:06,170 --> 00:09:10,290
会被设定为与其相连节点
的位置的平均值

131
00:09:12,540 --> 00:09:16,627
于是 如果我求解了那个系统 如果
我求解了那个线性系统 你可以使用任何

132
00:09:16,627 --> 00:09:21,201
你喜欢的数值方法求解那个
矩阵问题 你就得到了答案

133
00:09:21,201 --> 00:09:24,918
所以 节点 5 在 (1/3, 1/3)

134
00:09:24,918 --> 00:09:27,703
节点 6 在 (2/3, 1/3)

135
00:09:27,703 --> 00:09:32,954
节点 7 在 (1/3, 2/3) 而
节点 8 在 (2/3, 2/3)

136
00:09:32,954 --> 00:09:37,847
于是 这些节点中的每一个最终
是在平均位置 节点 5 的位置

137
00:09:37,847 --> 00:09:43,080
等于节点 1, 6 和 7 位置的平均
即它们的中心

138
00:09:43,080 --> 00:09:48,706
所以 我取节点 1 加上 节点 6的位置
加上节点 7 的位置

139
00:09:48,706 --> 00:09:51,490
除以 3 我的到节点 5 的位置

140
00:09:52,670 --> 00:09:57,049
所以 我们求解出
节点5、6、7 以及

141
00:09:57,049 --> 00:10:01,766
节点 8 的位置 通过求解一个矩阵问题
即为这里显示的一个非平面嵌入的图

142
00:10:01,766 --> 00:10:04,650
找到了这个平面表示

143
00:10:04,650 --> 00:10:07,800
你并非必须求解一个矩阵
来达到这个目的

144
00:10:07,800 --> 00:10:12,680
你可以通过下面的方法做到同样的事情
实际上从你的节点 1、2

145
00:10:12,680 --> 00:10:17,710
3、4 的固定位置开始 然后
对所有剩余的节点

146
00:10:17,710 --> 00:10:22,940
你可以赋予它们随机位置作为开始
然后再迭代的

147
00:10:22,940 --> 00:10:28,380
用它们邻居节点位置的平均
替换那些节点的位置

148
00:10:28,380 --> 00:10:31,520
如果你继续地
用其邻居节点位置

149
00:10:31,520 --> 00:10:34,480
的平均位置
替换每一个节点的位置

150
00:10:34,480 --> 00:10:37,530
那些节点将会逐渐移动到
它们所应该在到位置

151
00:10:37,530 --> 00:10:42,040
如此 你可以求解这个系统
但不需要建立一个矩阵

152
00:10:42,040 --> 00:10:45,780
而只是通过持续不断地
进行这一迭代过程

153
00:10:45,780 --> 00:10:49,330
移动每一个节点到
其邻居节点到平均位置

154
00:10:52,158 --> 00:10:56,558
所以 Tutte的算法告诉我们 
我们可以通过求解一个线性系统

155
00:10:56,558 --> 00:10:59,290
来实现嵌入一个平面图
但这个并不是那么困难

156
00:10:59,290 --> 00:11:02,990
以可以通过确定
你的一些节点到

157
00:11:02,990 --> 00:11:05,890
固定位置
而实现完全相同的事情

158
00:11:05,890 --> 00:11:07,450
然后 剩下的节点

159
00:11:07,450 --> 00:11:11,390
你只要用它们的邻居节点的平均值来代替

160
00:11:11,390 --> 00:11:14,670
即那些和那个节点共享一条边的节点

161
00:11:14,670 --> 00:11:19,503
如果你一遍又一遍地持续这样做
那些节点会慢慢到达

162
00:11:19,503 --> 00:11:22,593
与Tutte算法将收敛到的位置
完全相同的位置

163
00:11:22,593 --> 00:11:31,709
[背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community