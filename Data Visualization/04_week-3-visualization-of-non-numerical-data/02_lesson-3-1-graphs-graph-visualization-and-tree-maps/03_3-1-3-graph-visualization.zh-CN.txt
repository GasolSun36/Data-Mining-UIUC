Tufte的方法告诉你如何
给平面上的图节点布局 使得那些边不会交叉 如果你没有平面图
只有随机的图 要用更有针对性的方法来布局
这样才能方便地可视化 正如之前的演示中
Tufte的平面图布局方法 将每个点放在
它的邻居的平均位置上 这样每个点就给当前的
点的位置施加一个力 这是力驱动布局的一个例子 还有好多种力驱动布局的方式 其中宝石布局很流行
这就是本例中布局的方式 这张图表示了酵母
蛋白质的互作用关系 大约有1500个酵母蛋白质
和2000个互作用关系 酵母蛋白质用节点表示
互作用关系用边表示 在力驱动布局的GEM算法中 我们模拟一个弹簧系统的力 这样连接两个节点
的边对应一个弹簧 如果弹簧比静止长度要长
那么它会有一个拉伸长度 而此时节点之间也会相互吸引 如果它们比静止长度要短
那么节点就会互相排斥 而且如果你有多级的节点
如果你有一个邻居很多的节点 那GEM会把弹簧的
静止长度延长 以此把邻居推开
因为这些邻居节点有很多 与那个多级数节点
共用一条边 在节点之间还有一种排斥作用 虽然他们并没有被弹簧连起来 就是为了使节点不叠加在一起
即使它们并不由一条边连接 这种排斥力基本相当于
两点之间距离的倒数 存在于任何两个点之间 最后所有节点都会受到一种 朝向图中心的引力
以使节点不要飘离太远 还有一个很小的随机扰动力 来保证节点的位置是唯一的 在我们讨论以放置节点
来进行图布局的时候 如果能考虑节点的
中心性是很好的 中心性是一种分析 节点应该放置在布局中
的哪个位置的方法 是应该放在更中间还是更边缘 这些蓝色节点是中心节点 红色节点是非中心节点 有很多种度量中心性的方式 很多种测量中心节点
应该如何布局的方法 节点度数是一种简单手法
只要计算一个节点拥有的 边的数量 这样高度数的节点
应该放在中间 低度数的节点可能会在边上 网叶排序（Page Rank） 也是一种中心性测量方法
Google用来查找 受欢迎的网页  方法大概是计算
其他页面到此页面的链接数 另一种方法基于隔离度 你可以把它想成
节点之间的距离 例如这里的绿色点 需要经过三条边到达红色点
那么距离就是三 距离指的是从
一个点到另一个点 所需要经过的
边的数量的最小值 而隔离矩阵基本就是
表示的是将从一个点 到图上其他点的距离加起来 如果把它们相加
那么对离图中心较近的点而言 结果就会比较小 而对处在图的边缘的点而言 在这种布局中
结果就会比较大 你可以把亲近中心性看作 隔离度的倒数 这样邻近中心性高的点 隔离度就比较低 你也可以把图的中心性
看作隔离度 只是我没有取所有节点的距离
然后把它们相加而已 我取了节点和离它最远的
节点之间的距离 它的倒数被叫做图的中心性值 最后还有居间中心性 居间中心性指的是对任一对结点 找到这对节点之间的最短路径 如果我找到任意节点和
另外一个节点之间的最短路径 然后统计经过一个特定的点的
所有最短路径 这就是这个节点的居间中心性值 如果我选择每一个节点
和另一个节点之间最短路径 这些最短路径更有可能
经过这些中心节点 而不是边缘节点 所以我们在这里画出的是 基于居间中心性的节点图 任意两个点之间的最短路径
会经过哪些点呢? 蓝色的点值比较高 红色的点值比较低 你还可以以此对边进行统计 有多少最短路径经过某条边? 这样我们就可以用居间中心性 或者其他中心性度量
来简化一张图 例如 如果我计算
这个酵母蛋白质网络的 边的居间中心性 居间中心性较低的边 经过他们的最短路径比较少 居间中心性较高的边
有很多边经过它们 所以有很多最短路径经过它们 那么如果我删除
有较少最短路径经过的边 你会认为它的影响少于
删除有较多最短路径 经过的边 这里是我根据边的居间中心性的
而作的绘图 然后删掉了居间中心性最低的
也就是深蓝色的边 留下了居间中心性最高的
也就是红色的边 如果去掉某条边会使图经不联通
我就没有去掉那些边 这样的结果是 图上的点和边一样多
大约1500条边和1500个点 我猜这像一个最少连通的树 但是它保留了
居间中心性较高的边 而去掉了居间中心性较低的边 这样余下的就是通讯主干 也就是在寻找任意两个点
之间最短路径时最常用的边 这就简化了布局 那么当我使用同样的
GEM布局图 即力驱动布局图 来计算弹簧距离时
右图中需要计算的边减少了 而左图中比较多 右图中节点布局更分散
因为弹簧更少了 而节点会更加自由的
移动到唯一的位置 在视觉上可以更好地看出
这种布局中节点的关系 比原来的要好 你也可以看出这里的边比较少 可以随时把必要的边加上去 可以加上那些
居间中心性比较低的边 以此看到更完全的图
但此时的布局还是比原来要好 当你试图用所有的边
来计算布局时 还有其他的方法用来给图布局 本例中的技术叫做边束
我们把所有节点放在一个圈内 画个圆圈 节点按经向分布
然后在圈内画边 并被节点围成的圈所包围 这样我们就可以把边
束成一束 如果我们有方法来
判断边之间的相似性 我们就可建立线束
这就叫做边束 它可以简化该图的可视化表示 本例是一个叫做Enron的公司
在2001年的诉讼案里 132名员工之间的电子邮件 这里有几种不同的布局 这是一种基于节点位置的
力驱动布局 而不是直接把边画成直线 把每个节点连起来以后
我们尝试着把边束起来 这样你就可以看到
在这些表示中主要的通讯线路 你怎样得知两条边是相似 还是不相似
以此将它们束在一起呢？ 对于这个任务而言
有效的方法是创建群落 把那些共享有相似行为的边和
有相似边连接的点 聚合起来 这样为了找到群落 可以根据中心性
或居间中心性的由大到小的顺序来去边 我们使用了后者 在之前的节点布局中
我们先移除中心性较低的边 与其不同 在这里
我们先移除中心性较高的边 现在我们移除一些边
是主要通信线路的一部分 这会让图变得不连通
产生一些孤立节点 孤立的节点会聚集成团 而这些团形成聚合
进一步形成群落 这样你可以把
群落里的节点想成 它们从具有高居间中心性的边
与另外的群落通讯 这样当我们依次去掉
居间中心性较高到较低的边时 我们就为这些群落
划分了层级关系 删除边时可以创建节点来表示
这些边所连接的群落 这样就可以用这些群落
来弄清楚应该以什么顺序 把这些节点布置在圆的边缘上 再通过把这些集团聚合在一起
我们可以把节点放在内部 来表示更高级的群落 这叫群落节点
他们不是原本的图的一部分 只是用来表示群落而已 来表示节点集团的聚合 这里有一些边束群落的例子 本例中我们看到
美国所有大学之间的橄榄球赛 伊利诺伊大学是其中的一所 参与之后 任意时间任一学校
会与另一所学校的对决 我们可以用一条边来表示
看最后的绘图 把具有高居间中心性的边移除
他们就会开始分化出群落 而我们就能找出一个布局
来表示这些低层次的群落 这几乎就像重新发现了
校际间的球赛联盟 所以通过查看所有举行的比赛 也就是美国一个学校与另一学校的橄榄球赛
我们就可以发现 美国大学之间
比赛的联盟关系 然后就可以运用这种群落结构
来弄清楚边的关系 所以一个群落中一区域的边和
另一区域的边 可以缩并起来形成边束 方法是把它们吸引到
边的节点位置上 这里的例子表示了Enron的实际群落 我们所发现的群落 这些和这里的其余部分
不在同一个位置上 例如这是Enron主席 他被列在这里的CEO区域 我们也发现了同样的这个群落 通过在由员工
发邮件关系组成的图中 去除高居间中心性的边
然后得到这些群落 我们之后会看到
过滤和关注互动细节 在边束的案例或任何
大型数据集中 都是非常有用的 我们可以点击 比如说
Enron的CEO Kenneth Lay 来查看所有传给其他员工 或者其他群落的电子邮件 再比如我可以点击
伊利诺伊大学 就可以看到它在十大联盟内
参与的其他联盟球赛 但也可以看到它在联盟之外
参加的球赛 我们刚才看到的
可视化图的方法有很多 并不一定是平面图
可以是任何图 社交网络或者其他的图 它们都大部分基于中心性分析 某种对节点做出的
中心性的定义 [背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community