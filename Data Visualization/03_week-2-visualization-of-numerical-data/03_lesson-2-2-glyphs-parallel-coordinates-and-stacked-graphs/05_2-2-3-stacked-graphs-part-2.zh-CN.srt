1
00:00:00,008 --> 00:00:04,165
[声音]

2
00:00:08,047 --> 00:00:11,184
如果我们为很多的因变量

3
00:00:11,184 --> 00:00:17,101
创建堆叠的图形布局
堆叠的柱状图 以及堆叠的线状图

4
00:00:17,101 --> 00:00:21,520
那么 你会看到一些有趣的效果
如同显示在这里一样

5
00:00:21,520 --> 00:00:26,390
你开始看到好似水流的现象
并且你会看到同样的数据变量

6
00:00:26,390 --> 00:00:31,590
沿着水平坐标轴而变化

7
00:00:31,590 --> 00:00:35,850
但你也看到这一表现方式
的一些其它的问题

8
00:00:35,850 --> 00:00:40,800
其一是 堆叠在较下层的变量的变化

9
00:00:40,800 --> 00:00:44,780
会影响上层变量的形状

10
00:00:44,780 --> 00:00:49,430
这样叠加到外层
就更难看出

11
00:00:49,430 --> 00:00:53,210
它们展示的变量是相同值
还是变量的值在增大还是

12
00:00:53,210 --> 00:00:53,980
是在减小。

13
00:00:53,980 --> 00:00:58,800
而且 你会看到
当到达图的最顶层时

14
00:00:58,800 --> 00:01:03,060
它的变化更显著
因为那是所有发生在其下层的

15
00:01:03,060 --> 00:01:03,900
变化的总和

16
00:01:05,140 --> 00:01:08,170
我们可以用少许几个变量
来分析这一现象

17
00:01:08,170 --> 00:01:12,622
假使我们在横轴上每一指定的位置
赋予一个变量

18
00:01:12,622 --> 00:01:17,220
每一个变量被表示为
比如说 f1 代表第一个变量

19
00:01:17,220 --> 00:01:20,730
f2 代表第二个变量
以此类推 f1 f2 f3 等

20
00:01:20,730 --> 00:01:26,128
然后 我们可以定义
起始零值 g0 做为基线

21
00:01:26,128 --> 00:01:30,708
在这个例子中 我们简单地令 g0 等于零 
即位于横轴上

22
00:01:30,708 --> 00:01:36,680
那么 gi 就是第 i 个变量
的图线顶端的位置

23
00:01:36,680 --> 00:01:41,620
第 i 个变量的图线顶端 gi
正好等于 g0 加上

24
00:01:41,620 --> 00:01:46,480
第 i 个变量以及堆叠在其下
所有的变量之和

25
00:01:47,860 --> 00:01:49,600
我们可以开始做一些分析

26
00:01:51,330 --> 00:01:57,690
正因为这一分析 有了另一种
展示方式 被称为主题河流（ThemeRiver）

27
00:01:57,690 --> 00:02:02,640
总的来说 主题河流是将
竖直方向的图线沿中心对齐

28
00:02:02,640 --> 00:02:06,420
即中心对齐横轴延伸

29
00:02:06,420 --> 00:02:13,180
就是将 g0 设置在堆叠后所有变量的
总高度一半的位置

30
00:02:13,180 --> 00:02:18,330
通过这样做 基本上可以说
图线在预层变化的样子

31
00:02:18,330 --> 00:02:22,020
将会是图线在底层
变化样子的一个镜像

32
00:02:22,020 --> 00:02:28,490
你得到的看起来更像一条河流
数据在流动变化

33
00:02:28,490 --> 00:02:33,470
这样减小了前面所说的剪切现象

34
00:02:33,470 --> 00:02:36,070
但并没有完全去除它

35
00:02:36,070 --> 00:02:41,339
例如 你可以看到这个区域
在其数据周围

36
00:02:42,980 --> 00:02:50,370
产生了一个很大的偏移
你是希望把这种影响减到最小化的

37
00:02:50,370 --> 00:02:57,560
所以 仅仅沿横轴中心对齐
垂直方向堆叠的数据

38
00:02:57,560 --> 00:03:03,640
就减小了图线沿横轴的高度

39
00:03:03,640 --> 00:03:08,680
而且 还减小了
顶部和底部的倾斜程度

40
00:03:08,680 --> 00:03:12,290
有一种流形图（Streamgraph）方式
在这方面做的更好

41
00:03:12,290 --> 00:03:16,780
它是通过改变 g0 点位置
来实现的

42
00:03:16,780 --> 00:03:22,200
流形图令根据这个图中的公式
来设置 g0 的位置

43
00:03:22,200 --> 00:03:25,956
即基于数据值 fi
按该公式计算 g0

44
00:03:25,956 --> 00:03:29,110
我们不会详细讲解
这一公式的推导

45
00:03:29,110 --> 00:03:34,165
通过改变堆叠柱状图
或者堆叠线状图

46
00:03:34,165 --> 00:03:40,190
的基准位置
再基于这一新的基线进行堆叠

47
00:03:40,190 --> 00:03:44,400
我们得到一个更佳平滑的图形
并且让我们

48
00:03:44,400 --> 00:03:49,060
在沿水平方向看这个图的时候
更容易进行比较

49
00:03:49,060 --> 00:03:54,500
以确定这些因变量的相对变化

50
00:03:54,500 --> 00:03:59,942
它减小了偏差以及摆动
偏差是指一个变量画出来

51
00:03:59,942 --> 00:04:05,280
在横轴方向上从它之前的位置
移动了多远

52
00:04:05,280 --> 00:04:11,373
摆动是减小了斜率
即 剪切效应

53
00:04:11,373 --> 00:04:17,900
就是由摆动而产生的

54
00:04:17,900 --> 00:04:23,210
你还可以改进其形状
通过改变你叠加变量

55
00:04:23,210 --> 00:04:25,720
的顺序

56
00:04:25,720 --> 00:04:31,590
所以 如果一些变量在横轴上
某个位置之前都是零

57
00:04:31,590 --> 00:04:33,410
之后从零变为其它值

58
00:04:33,410 --> 00:04:38,880
你可以改变它们在变量
堆叠的什么地方显示

59
00:04:38,880 --> 00:04:44,100
在上面这种情况下 它们
以某种固定的

60
00:04:44,100 --> 00:04:45,730
随意的顺序堆叠在一起

61
00:04:45,730 --> 00:04:49,290
你可以看到有点儿
像是一个着色的水流

62
00:04:49,290 --> 00:04:53,000
给每一个变零用不同的着色
有助于感知那个水流

63
00:04:54,300 --> 00:04:58,020
在下面这个例子中
它们的着色是基于变量

64
00:04:58,020 --> 00:05:00,190
什么时候有非零值开始

65
00:05:01,360 --> 00:05:04,710
但是 你也可以增加新的变量

66
00:05:04,710 --> 00:05:07,460
当这些变量取非零值的时候

67
00:05:07,460 --> 00:05:10,640
你可以一直吧它们加到
这个图的外侧

68
00:05:10,640 --> 00:05:15,050
具体是这样 当变量开始

69
00:05:15,050 --> 00:05:18,990
在横轴某个特定位置
取到非零值时

70
00:05:18,990 --> 00:05:21,990
你就把它们加在图上的外侧

71
00:05:21,990 --> 00:05:26,640
这样其取值的突然增大
不会扰乱其它的变量

72
00:05:26,640 --> 00:05:29,320
因为它是加在图的外侧

73
00:05:29,320 --> 00:05:33,640
之后 随着它的衰减 其它变量

74
00:05:33,640 --> 00:05:37,780
也从零变为非零值
并被加到图的外侧

75
00:05:37,780 --> 00:05:43,570
于是 你得到这种漂亮的图形

76
00:05:43,570 --> 00:05:51,280
你可看到变量沿着横轴向右的
相对变化

77
00:05:51,280 --> 00:05:56,340
即使我们在看的是垂直方向有
10个或者20个变量在一个堆叠图里

78
00:05:56,340 --> 00:05:58,470
至此 我们学习了如何创建一个流形图
以及

79
00:05:58,470 --> 00:06:02,070
象把柱状图堆叠起来
这样简单的事情如何能成为

80
00:06:02,070 --> 00:06:07,300
将来可被进一步探究于
如何有效用于显示

81
00:06:07,300 --> 00:06:09,856
我们还学到 例如

82
00:06:09,856 --> 00:06:15,306
一个饼状图会产生误导
特别是在三维中显示的时候

83
00:06:15,306 --> 00:06:25,306
[背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community