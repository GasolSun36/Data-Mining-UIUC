1
00:00:00,150 --> 00:00:03,771
[背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community

2
00:00:08,405 --> 00:00:11,400
现在我们已经理解了信息可视化

3
00:00:11,400 --> 00:00:14,290
我们可以开始思考该如何设计一个信息

4
00:00:14,290 --> 00:00:15,580
可视化系统

5
00:00:17,090 --> 00:00:22,330
当创建一个可视化系统时 你其实就是在创造用户界面

6
00:00:22,330 --> 00:00:27,300
这是用户和电脑促进生成的数据之间的界面

7
00:00:27,300 --> 00:00:32,340
所以数据可视化系统其实就是用户界面

8
00:00:32,340 --> 00:00:36,680
你使用电脑来用图表表示数据

9
00:00:36,680 --> 00:00:41,630
因此用户界面的设计原理对建设一个好的

10
00:00:41,630 --> 00:00:44,300
有效的可视化系统是很重要的

11
00:00:44,300 --> 00:00:46,950
现在你已经对这个系统有所了解

12
00:00:46,950 --> 00:00:51,360
如图像在系统中的运作以及我们如何在系统中显示数据

13
00:00:51,360 --> 00:00:54,150
在课程的第一模块中

14
00:00:54,150 --> 00:00:58,080
你也了解到了用户是如何与系统交互的

15
00:00:58,080 --> 00:01:00,080
我们也需要来专注下目标

16
00:01:00,080 --> 00:01:02,370
用户想要达到的目标是什么

17
00:01:02,370 --> 00:01:05,690
以及他们为了达到目的所要完成的任务

18
00:01:05,690 --> 00:01:06,995
当然还有交互

19
00:01:06,995 --> 00:01:11,112
我们需要能够表示和理解用户与系统的交互

20
00:01:11,112 --> 00:01:15,690
比如 描述一段对话

21
00:01:15,690 --> 00:01:20,220
或是一段让用户点击和选择的一段话等

22
00:01:20,220 --> 00:01:25,430
以便能让用户用直觉的 有成效的方式完成任务

23
00:01:27,270 --> 00:01:32,950
我们会按照标准的顺序来完成一个系统设计

24
00:01:32,950 --> 00:01:38,400
设计一个可视化系统和设计软件系统或

25
00:01:38,400 --> 00:01:39,750
其他一般的系统很类似

26
00:01:39,750 --> 00:01:43,460
我们从基本的需求说明开始

27
00:01:43,460 --> 00:01:46,810
其实就是尝试弄明白这个系统

28
00:01:46,810 --> 00:01:48,760
要解决哪些问题

29
00:01:48,760 --> 00:01:50,840
系统会为谁服务

30
00:01:50,840 --> 00:01:53,490
那个人怎么样才能根据你设计的可视化系统

31
00:01:53,490 --> 00:01:55,350
做出决策

32
00:01:56,350 --> 00:01:59,860
这需要你和用户大量沟通

33
00:01:59,860 --> 00:02:04,480
我看到过有利用专题小组座谈或用户采访的

34
00:02:04,480 --> 00:02:08,620
但用户采访时重要的是不要询问用户

35
00:02:08,620 --> 00:02:11,970
他们想要哪种界面或可视化系统

36
00:02:11,970 --> 00:02:14,960
因为你将是设计该可视化系统的专家

37
00:02:14,960 --> 00:02:18,940
通常用户不会知道现在的情况和有什么可选

38
00:02:18,940 --> 00:02:23,790
最适合他们的是什么
所以你应该问一些他们想回答的

39
00:02:23,790 --> 00:02:28,080
关于系统的问题
并且如何更好地传递给他们信息

40
00:02:28,080 --> 00:02:31,680
以使他们有足够的信息来回答那些问题

41
00:02:31,680 --> 00:02:35,220
然后是构架设计

42
00:02:35,220 --> 00:02:40,310
这相当于把完整的系统分解成不同的分系统

43
00:02:40,310 --> 00:02:42,360
如果你在做一个可视化仪表盘

44
00:02:42,360 --> 00:02:45,690
那么这里的分系统指的就是仪表盘上的单个组件

45
00:02:45,690 --> 00:02:48,210
就是分系统的设计了

46
00:02:48,210 --> 00:02:51,030
你需要弄清楚如何实现单个的组件

47
00:02:52,310 --> 00:02:56,210
然后就是具体实施
通过具体的编码或

48
00:02:56,210 --> 00:03:00,290
或建立系统来真正地实现这些组件

49
00:03:00,290 --> 00:03:03,780
然后你调试这些组件

50
00:03:03,780 --> 00:03:06,730
接下来很重要的一步是用户评估

51
00:03:06,730 --> 00:03:10,100
这些组件齐备之后 你需要确保与用户一起

52
00:03:10,100 --> 00:03:14,380
测试这些组件 并确保所有各组件按要求正常运行

53
00:03:14,380 --> 00:03:18,780
用户也是按你预计的方式来使用它们

54
00:03:18,780 --> 00:03:23,240
当然你也要用一些统计数据来确保
你的评估

55
00:03:23,240 --> 00:03:25,970
不是建立在猜测上

56
00:03:25,970 --> 00:03:30,070
而是用户确实在有效的使用这个系统

57
00:03:30,070 --> 00:03:35,210
最后市系统维护的文档和维修

58
00:03:35,210 --> 00:03:40,074
理解这个过程很容易
但当人们估算

59
00:03:40,074 --> 00:03:44,938
需要多久来实现这个系统时
往往只注重实施阶段的时间

60
00:03:44,938 --> 00:03:48,678
而你会看到实施也许只是七个步骤之一

61
00:03:48,678 --> 00:03:53,164
这也是为什么我们说 在我们设计软件系统
或用户交互界面 或者

62
00:03:53,164 --> 00:03:57,393
可视化系统的时候
你需要在你认为需要的总的时间上

63
00:03:57,393 --> 00:04:00,270
再加倍

64
00:04:00,270 --> 00:04:03,810
这加倍的时间
你将意识到你终会用在

65
00:04:03,810 --> 00:04:07,090
做一些调试或者组件的设计上

66
00:04:07,090 --> 00:04:11,240
然后你还需要把时间翻倍
因为你也需要时间做一些分析

67
00:04:11,240 --> 00:04:15,350
以及需求说明 系统评估和维护等

68
00:04:15,350 --> 00:04:19,130
所以 如果只考虑实施阶段
我们通常会低估时间

69
00:04:19,130 --> 00:04:25,000
实际需要耗费六至八倍的时间
来真正组建一个系统

70
00:04:25,000 --> 00:04:26,560
以确保系统正确

71
00:04:26,560 --> 00:04:31,310
关于创造这个系统的一些其他的建议
是使用概念设计或雏形设计

72
00:04:31,310 --> 00:04:35,310
我们在最后谈到用户的评估
但是你应该

73
00:04:35,310 --> 00:04:40,260
在制作系统的每一个阶段上进行用户评估和测试

74
00:04:40,260 --> 00:04:44,455
利用模拟用户或是真正的用户

75
00:04:44,455 --> 00:04:48,700
所以在制定用户说明时 你需要利用雏型
来模拟实际系统将是如何工作的

76
00:04:48,700 --> 00:04:52,860
之后进行构架设计

77
00:04:52,860 --> 00:04:56,590
对于构架设计 你也许需要有制作一些草图

78
00:04:56,590 --> 00:05:01,100
来表示可能的用户界面 并呈现给用户

79
00:05:01,100 --> 00:05:05,790
以确认系统符合用户需求

80
00:05:05,790 --> 00:05:09,160
或者 在一些特例中
你可能甚至用一个绿野仙踪般神奇的系统

81
00:05:09,160 --> 00:05:13,650
来模拟系统 
而不需要照实际系统那样运行

82
00:05:13,650 --> 00:05:16,340
你可以通过预设值使系统工作

83
00:05:16,340 --> 00:05:21,280
如在一生物系统进行组件设计中会遇到

84
00:05:21,280 --> 00:05:25,410
在实际实施系统之前
通过仿真来验证

85
00:05:25,410 --> 00:05:28,580
设计将符合要求

86
00:05:28,580 --> 00:05:31,900
你不需要总是回到用户那里来获得答案

87
00:05:31,900 --> 00:05:37,260
通常 特别是在系统设计阶段

88
00:05:37,260 --> 00:05:41,640
你能使用任务以及对话框的模型

89
00:05:41,640 --> 00:05:45,230
所以这个基于需求说明的用户模型

90
00:05:45,230 --> 00:05:48,130
能帮助你了解用户实际需要实现的目标

91
00:05:48,130 --> 00:05:50,660
你可开始分解任务

92
00:05:50,660 --> 00:05:54,989
并且开始进行组件布局的分析任务

93
00:05:56,450 --> 00:06:01,610
以确定它们符合指定的需求

94
00:06:01,610 --> 00:06:03,500
最后 就像我之前提到过的

95
00:06:03,500 --> 00:06:06,570
不要等待到最后 才进行组件测试

96
00:06:06,570 --> 00:06:11,250
在你建好用户模型 对话框 和任务之后

97
00:06:11,250 --> 00:06:13,310
你需要对其中每一项进行测试

98
00:06:13,310 --> 00:06:18,013
你可以在启动实施工作之前即

99
00:06:18,013 --> 00:06:19,796
开始测试你的设计

100
00:06:22,501 --> 00:06:27,030
所以对于用户模型
有许多不同的技术来实现

101
00:06:27,030 --> 00:06:32,370
你要专注于用户需要什么去回答一个问题

102
00:06:32,370 --> 00:06:37,510
你需要提供可视化来帮助用户回答问题

103
00:06:37,510 --> 00:06:41,030
你并不一定要制作最漂亮的可视化界面

104
00:06:41,030 --> 00:06:46,450
或者使用在电脑系统上所有的功能

105
00:06:46,450 --> 00:06:49,080
你需要知道用户在想什么

106
00:06:49,080 --> 00:06:53,580
尝试从用户的角度来看系统
而不是 比如说

107
00:06:53,580 --> 00:06:59,780
从程序员的角度来看
或者系统设计者的角度

108
00:06:59,780 --> 00:07:01,390
你想要了解你的用户

109
00:07:01,390 --> 00:07:03,860
用户熟悉什么?

110
00:07:03,860 --> 00:07:05,760
他们在用其他什么工具?

111
00:07:05,760 --> 00:07:09,070
用户在其他用户中扮演什么角色

112
00:07:09,070 --> 00:07:11,450
或是在他们的机构中扮演什么角色?

113
00:07:11,450 --> 00:07:15,550
用户可能知道什么以及用户可能不理解什么?

114
00:07:15,550 --> 00:07:18,430
最后 用户使用这个系统的动机是什么?

115
00:07:18,430 --> 00:07:21,690
你能最好以什么方式提供给用户信息

116
00:07:21,690 --> 00:07:26,910
来方便用户使用系统并且知道如何合理的使用

117
00:07:26,910 --> 00:07:29,320
最后 进行认知调查是有益的

118
00:07:29,320 --> 00:07:35,200
把你自己放在用户的角度来制定出详细的图表

119
00:07:35,200 --> 00:07:40,530
想象一下 当用户使用你的可视化系统的时候
他们脑海中在想什么

120
00:07:40,530 --> 00:07:47,310
这样你就能够基于用户目前的关注的
更好展现数据

121
00:07:47,310 --> 00:07:51,775
用户建模的方法有很多
其中一个使用很久的方法

122
00:07:51,775 --> 00:07:52,890
叫做GOMS

123
00:07:52,890 --> 00:07:55,820
GOMS 四个字母分别代表目标 操作者 方法和选择

124
00:07:55,820 --> 00:08:01,050
这能够帮助你了解一个用户的可能想法

125
00:08:01,050 --> 00:08:05,658
用户是目标导向的
所以为整个系统规划蓝图

126
00:08:05,658 --> 00:08:06,950
系统中建造了幻觉。

127
00:08:06,950 --> 00:08:10,810
在你设计这个系统的时候
想想操作者会怎么做也是十分有益的

128
00:08:10,810 --> 00:08:12,060
有些什么操作

129
00:08:12,060 --> 00:08:17,156
即用户需要哪些基本的操作来实现目标?

130
00:08:17,156 --> 00:08:22,380
用户将结合这些操作来形成方法

131
00:08:22,380 --> 00:08:25,340
也许有多种方法来实现目标

132
00:08:25,340 --> 00:08:28,420
你将支持哪一个方法 去尝试支持更多

133
00:08:28,420 --> 00:08:30,980
给猫剥皮往往有很多方法

134
00:08:30,980 --> 00:08:34,160
使用者将会有不同的方法来实现一个目标

135
00:08:34,160 --> 00:08:36,890
这种支持越灵活越好

136
00:08:36,890 --> 00:08:38,790
最后一步 选择

137
00:08:38,790 --> 00:08:42,830
如果有多重方法 那么
用户就有多重方式选择使用哪一种方法

138
00:08:42,830 --> 00:08:46,670
这时你要提供尽量详尽的信息

139
00:08:46,670 --> 00:08:49,918
以帮助用户做出最合适的选择

140
00:08:49,918 --> 00:08:54,000
用户有一个目标 且每个目标都有一个或者

141
00:08:54,000 --> 00:08:57,790
多个相关任务

142
00:08:57,790 --> 00:09:03,610
所以你要确保你的系统能够将任务变成目标

143
00:09:03,610 --> 00:09:08,960
这就是用户界面设计的原则 叫做"可综合性"

144
00:09:08,960 --> 00:09:13,890
如果你有一个可视化面板的话

145
00:09:13,890 --> 00:09:17,850
用户在这个面板前是否知道如何使用这个系统
来获得答案?

146
00:09:17,850 --> 00:09:22,350
用户是否可以通过面板提供的信息

147
00:09:22,350 --> 00:09:25,960
而得出有关结论?

148
00:09:25,960 --> 00:09:29,070
这些任务还会变的复杂

149
00:09:29,070 --> 00:09:34,360
所以你需要简化
将任务变成子任务 目标变成子目标

150
00:09:34,360 --> 00:09:38,440
之后任务将会有一定的顺序
这个顺序就是计划

151
00:09:38,440 --> 00:09:42,810
那么 你将如何清楚的表达这个计划

152
00:09:42,810 --> 00:09:45,770
以便使用户通过你的可视化系统
可以进行综合?

153
00:09:45,770 --> 00:09:51,070
如果需要进行选择的话
你也许需要考虑条件性任务

154
00:09:51,070 --> 00:09:53,340
条件性任务的触发点是什么？

155
00:09:53,340 --> 00:09:56,260
什么时候需要开子窗口?

156
00:09:56,260 --> 00:10:00,010
什么时候一些操作可以省去?

157
00:10:00,010 --> 00:10:06,010
你可能还得考虑等待时间
信息处理的延迟

158
00:10:06,010 --> 00:10:11,790
或者什么时候用户被打断
或者循环任务 并行任务等

159
00:10:11,790 --> 00:10:15,650
之后你可根据这些结果来实现最好的界面

160
00:10:15,650 --> 00:10:20,590
以帮助用户获得他们需要的信息

161
00:10:20,590 --> 00:10:23,490
来做出一个明智的决定

162
00:10:23,490 --> 00:10:25,390
这里有一些面板的例子

163
00:10:25,390 --> 00:10:30,730
这是一个旧的可视面板图 出自2001的 SIGCHI （人机交互特别兴趣群体）

164
00:10:30,730 --> 00:10:34,380
但是它在现在依旧能被使用

165
00:10:34,380 --> 00:10:39,460
它可用于监管在线会话和新闻组讨论

166
00:10:39,460 --> 00:10:42,700
我们有这种面板15年甚至更长的时间了

167
00:10:42,700 --> 00:10:46,470
依旧使用良好

168
00:10:46,470 --> 00:10:50,930
最初它是一种基于主体对话的线程树

169
00:10:50,930 --> 00:10:53,810
即用户对主体进行回应

170
00:10:53,810 --> 00:10:56,640
有人先对原始的主体回应

171
00:10:56,640 --> 00:10:59,370
然后其他的人则对初始的回应再回应

172
00:10:59,370 --> 00:11:02,420
所以你得到类似如树的表现

173
00:11:02,420 --> 00:11:05,170
这种组织是按时间顺序的 纵向的

174
00:11:05,170 --> 00:11:08,140
也就形成了基于回应的层次结构

175
00:11:09,510 --> 00:11:12,470
哪些信息回应了其它哪些信息呢?

176
00:11:12,470 --> 00:11:17,550
这里还有用户信息
用户的信息表示在这第二个可视化图中

177
00:11:17,550 --> 00:11:22,210
你就有了类似如甘特图的图形 也被叫做钢琴卷

178
00:11:22,210 --> 00:11:27,260
这基本对应于横向是随时间而发布的信息

179
00:11:27,260 --> 00:11:31,539
而纵向则是依发布的信息条数来排序

180
00:11:33,070 --> 00:11:38,420
然后你就能获得这个社会关系网图
在这个情况下就是个社交网络

181
00:11:38,420 --> 00:11:45,400
只是一个基于谁对谁的信息有回应的图表

182
00:11:45,400 --> 00:11:48,500
至于节点的水平位置和垂直位置

183
00:11:48,500 --> 00:11:53,540
在水平方向上的数字表示每一个人发出的回应

184
00:11:53,540 --> 00:11:55,990
垂直方向上的数字则表示收到回应

185
00:11:55,990 --> 00:12:00,070
所以这种原始的张贴能收到很多的回应

186
00:12:00,070 --> 00:12:04,580
而其余的也有一些回应

187
00:12:04,580 --> 00:12:07,650
最后我们想要根据需要来获取细节

188
00:12:07,650 --> 00:12:11,300
你可以选择细节
你可以在这选择一个节点

189
00:12:11,300 --> 00:12:16,390
你可在这选择某个人
在这线索树中就被高亮显示

190
00:12:16,390 --> 00:12:19,040
你可以在这里选择单独的节点

191
00:12:19,040 --> 00:12:23,690
并且会看到实际的张贴以便获取这些细节

192
00:12:24,970 --> 00:12:30,210
另外一个界面的例子是CDC

193
00:12:30,210 --> 00:12:35,680
疾病控制中心
FluView 展示的是流感每年在美国的传播

194
00:12:35,680 --> 00:12:40,430
以及是哪类流感在流行

195
00:12:40,430 --> 00:12:46,040
所以你能看到流感发生的高峰期
和是哪类流感

196
00:12:46,040 --> 00:12:50,040
这里有一张图
你按地域来看数据

197
00:12:50,040 --> 00:12:53,600
比如说 这里是伊利诺伊大学所在的地方

198
00:12:53,600 --> 00:12:56,590
我能看到我得注意哪种的流感

199
00:12:56,590 --> 00:12:58,920
以及什么时候得注意

200
00:12:58,920 --> 00:13:04,210
然后我可以基于这些数据来确定

201
00:13:04,210 --> 00:13:06,500
我本人或其他人可能获得流感的可能性

202
00:13:07,660 --> 00:13:12,336
这里也是伊利诺伊大学厄香槟校区大学的

203
00:13:12,336 --> 00:13:13,500
一个策略计划版图

204
00:13:13,500 --> 00:13:17,808
我们有一个策略计划其包几个部分

205
00:13:17,808 --> 00:13:22,080
比如说 扶植奖学金 发现创新

206
00:13:22,080 --> 00:13:28,430
提供变革性的学习经验 社会影响 管理资源

207
00:13:28,430 --> 00:13:32,500
之后我们在界面上 可以选择独立的图表

208
00:13:32,500 --> 00:13:36,370
这些图表可告诉我们每一部分的情况

209
00:13:36,370 --> 00:13:40,850
但是图表并不仅仅提供原始数据

210
00:13:40,850 --> 00:13:44,640
比方说 他们还提供
我们在某些部分的目标

211
00:13:44,640 --> 00:13:47,300
在某些情况下
我们所作的比预期目标好

212
00:13:47,300 --> 00:13:50,850
在其他一些情况下 我们则没有达到目标

213
00:13:50,850 --> 00:13:53,430
所以图表能激励我们将工作做得更好

214
00:13:56,190 --> 00:14:01,215
所以遵循这些设计的规则
这些设计可视化系统的顺序

215
00:14:01,215 --> 00:14:05,509
你能开始设计你自己的 基于你自己的数据的

216
00:14:05,509 --> 00:14:10,424
可视化界面
以便你能使用它更好的做出决策

217
00:14:10,424 --> 00:14:20,424
[背景音乐]
翻译: RyukaSuu |审阅: 19waa
Coursera Global Translator Community